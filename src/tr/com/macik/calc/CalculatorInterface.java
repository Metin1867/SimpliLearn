package tr.com.macik.calc;

public interface CalculatorInterface<T> {
	public T add(CalcModel<T> model);			// addition of all elements
	public T sub(CalcModel<T> model);			// subtraction ...
	public T mlt(CalcModel<T> model);			// multiply ...
	public T div(CalcModel<T> model);			// divison ...
	
	public T add2(CalcModel<T> model);			// addition of two elements
	public T sub2(CalcModel<T> model);			// subtraction ...
	public T mlt2(CalcModel<T> model);			// multiply ...
	public T div2(CalcModel<T> model);			// divison ...

	public T addN(CalcModel<T> model, int n);	// addition of n-elements
	public T subN(CalcModel<T> model, int n);	// subtraction ...
	public T mltN(CalcModel<T> model, int n);	// multiply ...
	public T divN(CalcModel<T> model, int n);	// divison ...
}
